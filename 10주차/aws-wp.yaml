Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances. Linked to AWS Parameter
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: Enter t3.small, t3.medium. Default is t3.medium.
    Type: String
    Default: t3.medium
    AllowedValues: 
      - t3.small
      - t3.medium
  LatestAmiId:
    Description: (DO NOT CHANGE)
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
    AllowedValues:
      - /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:
# IAM Role
  WPLabInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: WPLabInstanceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  WPLabInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: WPLabInstanceProfile
      Path: /
      Roles:
        - !Ref WPLabInstanceRole

# VPC1 Resource
  VPC1:
    Type: AWS::EC2::VPC
    Properties:
     CidrBlock: 10.1.0.0/16
     EnableDnsSupport: true
     EnableDnsHostnames: true
     Tags:
      - Key: Name
        Value: WP-VPC1
  VPC1InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: WP-VPC1-IGW
  VPC1InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref VPC1InternetGateway
      VpcId: !Ref VPC1

  VPC1RouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC1
      Tags:
        - Key: Name
          Value: WP-VPC1-PublicRT
  VPC1RouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC1
      Tags:
        - Key: Name
          Value: WP-VPC1-PrivateRT

  VPC1Route1:
    Type: AWS::EC2::Route
    DependsOn: VPC1InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref VPC1RouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref VPC1InternetGateway

  VPC1Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      CidrBlock: 10.1.1.0/24
      Tags:
        - Key: Name
          Value: WP-VPC1-Subnet1
  VPC1Subnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VPC1RouteTable1
      SubnetId: !Ref VPC1Subnet1
  VPC1Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      CidrBlock: 10.1.2.0/24
      Tags:
        - Key: Name
          Value: WP-VPC1-Subnet2
  VPC1Subnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VPC1RouteTable1
      SubnetId: !Ref VPC1Subnet2

  VPC1Subnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      CidrBlock: 10.1.3.0/24
      Tags:
        - Key: Name
          Value: WP-VPC1-Subnet3
  VPC1Subnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VPC1RouteTable2
      SubnetId: !Ref VPC1Subnet3
  VPC1Subnet4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      CidrBlock: 10.1.4.0/24
      Tags:
        - Key: Name
          Value: WP-VPC1-Subnet4
  VPC1Subnet4RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VPC1RouteTable2
      SubnetId: !Ref VPC1Subnet4

# Security Group
  VPC1SG1:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC1
      GroupDescription: SGWebSrv
      Tags:
      - Key : Name
        Value : SGWebSrv
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0

  VPC1SG2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC1
      GroupDescription: SGALB
      Tags:
      - Key : Name
        Value : SGALB
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0

  VPC1SG3:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC1
      GroupDescription: SGRDS
      Tags:
      - Key : Name
        Value : SGRDS
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '3306'
        ToPort: '3306'
        SourceSecurityGroupId: !Ref VPC1SG1

  VPC1SG4:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC1
      GroupDescription: SGEFS
      Tags:
      - Key : Name
        Value : SGEFS
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '2049'
        ToPort: '2049'
        SourceSecurityGroupId: !Ref VPC1SG1

# ALB
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Name: ALB-WP
      SecurityGroups:
        - !Ref VPC1SG2
      Subnets:
        - !Ref VPC1Subnet1
        - !Ref VPC1Subnet2

  ALBTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: ALB-TG
      Port: 80
      Protocol: HTTP
      HealthCheckPath: /
      HealthCheckIntervalSeconds: 10
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3
      Targets:
        - Id: !Ref VPC1Instance1
          Port: 80
      TargetGroupAttributes: 
      - Key : deregistration_delay.timeout_seconds
        Value : '60'
      VpcId: !Ref VPC1
      Tags:
      - Key : Name
        Value : VPC1-ALBTG

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTG
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP

# EFS
  ElasticFileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      FileSystemTags:
        - Key: Name
          Value: WebSrvs-EFS
  ElasticFileSystemMountTarget0:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref ElasticFileSystem
      SecurityGroups:
      - !Ref VPC1SG4
      SubnetId: !Ref VPC1Subnet1
  ElasticFileSystemMountTarget1:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref ElasticFileSystem
      SecurityGroups:
      - !Ref VPC1SG4
      SubnetId: !Ref VPC1Subnet2

# Instances1
  VPC1Instance1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      IamInstanceProfile : WPLabInstanceProfile
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: AllInOne
      NetworkInterfaces:
        - DeviceIndex: 0
          SubnetId: !Ref VPC1Subnet1
          GroupSet:
          - !Ref VPC1SG1
          PrivateIpAddress: 10.1.1.10
      UserData:
        Fn::Base64: |
          #!/bin/bash
          hostnamectl --static set-hostname AllInOne
          amazon-linux-extras install lamp-mariadb10.2-php7.2 php7.2 -y
          yum install httpd mariadb-server htop tree -y
          systemctl start httpd && systemctl enable httpd
          systemctl start mariadb && systemctl enable mariadb
          echo -e "\n\nqwe123\nqwe123\ny\nn\ny\ny\n" | /usr/bin/mysql_secure_installation
          sed -i'' -r -e "/\[mysqld\]/a\character-set-server=utf8" /etc/my.cnf.d/mariadb-server.cnf
          sed -i'' -r -e "/\[mysqld\]/a\collation-server=utf8_general_ci" /etc/my.cnf.d/mariadb-server.cnf
          sed -i'' -r -e "/\[mysqld\]/a\init_connect=\"SET NAMES utf8\"" /etc/my.cnf.d/mariadb-server.cnf
          sed -i'' -r -e "/\[mysqld\]/a\init_connect=\"SET collation_connection = utf8_general_ci\"" /etc/my.cnf.d/mariadb-server.cnf
          sed -i'' -r -e "/\[client\]/a\default-character-set=utf8" /etc/my.cnf.d/client.cnf
          sed -i'' -r -e "/\[mysql\]/a\default-character-set=utf8" /etc/my.cnf.d/mysql-clients.cnf
          sed -i'' -r -e "/\[mysqldump\]/a\default-character-set=utf8" /etc/my.cnf.d/mysql-clients.cnf
          mysql -uroot -pqwe123 -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'qwe123';"
          mysql -uroot -pqwe123 -e "CREATE DATABASE wordpressdb"
          systemctl restart mariadb
          echo "<?php phpinfo(); ?>" > /var/www/html/phpinfo.php
          yum install gcc php-xml php-mbstring php-sodium php-devel php-pear ImageMagick-devel ghostscript -y
          cat <<EOT> /etc/php.d/40-imagick.ini
          ; Enable imagick extension module
          extension = imagick.so
          EOT
          sed -i 's/^memory_limit = 128M/memory_limit = -1/g' /etc/php.ini
          systemctl restart httpd
          printf "\n" | pecl install imagick
          sed -i 's/^upload_max_filesize = 2M/upload_max_filesize = 64M/g' /etc/php.ini
          sed -i 's/^post_max_size = 8M/post_max_size = 64M/g' /etc/php.ini
          sed -i 's/^max_execution_time = 30/max_execution_time = 300/g' /etc/php.ini
          wget https://ko.wordpress.org/wordpress-5.7-ko_KR.zip
          unzip wordpress-5.7-ko_KR.zip
          cp wordpress/wp-config-sample.php wordpress/wp-config.php
          sed -i "s/database_name_here/wordpressdb/g" wordpress/wp-config.php
          sed -i "s/username_here/root/g" wordpress/wp-config.php
          sed -i "s/password_here/qwe123/g" wordpress/wp-config.php
          cat <<EOT>> wordpress/wp-config.php
          define('WP_MEMORY_LIMIT', '512M');
          EOT
          cp -r wordpress/* /var/www/html/
          chown -R apache /var/www
          chgrp -R apache /var/www
          chmod 2775 /var/www
          find /var/www -type d -exec chmod 2775 {} \;
          find /var/www -type f -exec chmod 0664 {} \;
          systemctl restart php-fpm
          systemctl restart httpd
          curl -o /var/www/html/xff.php https://cloudneta-book.s3.ap-northeast-2.amazonaws.com/chapter5/XFF-all.php --silent

# CloudFront
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn: ALB
    Properties:
      DistributionConfig:
        Origins:
        - DomainName: !GetAtt ALB.DNSName
          Id: elb
          CustomOriginConfig:
            OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          AllowedMethods:
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          DefaultTTL: 0
          MaxTTL: 0
          MinTTL: 0
          ForwardedValues:
            Headers:
            - '*'
            Cookies:
              Forward: all
            QueryString: true
          TargetOriginId: elb
          ViewerProtocolPolicy: allow-all
          Compress: true
        Comment: WordPress CDN
        Enabled: true
        PriceClass: PriceClass_200
        IPV6Enabled: false
        # Aliases:
        # - wp.gasida.link
        # ViewerCertificate:
        #   AcmCertificateArn: !Ref CloudFrontAcmCertificate
        #   SslSupportMethod: sni-only
        #   MinimumProtocolVersion: TLSv1.2_2019

# Instance2
  VPC1Instance2:
    Type: AWS::EC2::Instance
    DependsOn: VPC1Instance1
    Properties:
      ImageId: !Ref LatestAmiId
      IamInstanceProfile : WPLabInstanceProfile
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: WebSrv-Leader
      NetworkInterfaces:
        - DeviceIndex: 0
          SubnetId: !Ref VPC1Subnet2
          GroupSet:
          - !Ref VPC1SG1
          PrivateIpAddress: 10.1.2.10
      UserData: !Base64
        "Fn::Join":
          - ""
          - - |
              #!/bin/bash -xe
            - |
              hostnamectl --static set-hostname WebSrv-Leader
            - |
              amazon-linux-extras install lamp-mariadb10.2-php7.2 php7.2 -y
            - |
              yum install httpd htop amazon-efs-utils tree -y
            - |
              systemctl start httpd && systemctl enable httpd
            - |
              yum install gcc php-xml php-mbstring php-sodium php-devel php-pear ImageMagick-devel ghostscript -y
            - |
              cat <<EOT> /etc/php.d/40-imagick.ini
            - |
              extension = imagick.so
            - |
              EOT
            - |
              sed -i 's/^memory_limit = 128M/memory_limit = -1/g' /etc/php.ini
            - |
              systemctl restart httpd
            - |
              printf "\n" | pecl install imagick
            - |
              sed -i 's/^upload_max_filesize = 2M/upload_max_filesize = 64M/g' /etc/php.ini
            - |
              sed -i 's/^post_max_size = 8M/post_max_size = 64M/g' /etc/php.ini
            - |
              sed -i 's/^max_execution_time = 30/max_execution_time = 300/g' /etc/php.ini
            - |
              wget https://ko.wordpress.org/wordpress-latest-ko_KR.zip
            - |
              unzip wordpress-latest-ko_KR.zip
            - |
              cp wordpress/wp-config-sample.php wordpress/wp-config.php
            - |
              sed -i "s/database_name_here/wordpressdb/g" wordpress/wp-config.php
            - |
              sed -i "s/username_here/root/g" wordpress/wp-config.php
            - |
              sed -i "s/password_here/qwe12345/g" wordpress/wp-config.php
            - |
              cat <<EOT>> wordpress/wp-config.php
            - |
              define('WP_MEMORY_LIMIT', '512M');
            - |
              EOT
            - |
              mkdir -p /var/www/wordpress/
            - |
              # EFS
            - "mount -t efs "
            - !Ref "ElasticFileSystem"
            - ":/ /var/www/wordpress"
            - |+

            - |
              cp -r wordpress/* /var/www/wordpress/
            - |
              chown -R apache:apache /var/www
            - |
              chmod 2775 /var/www
            - |
              find /var/www -type d -exec chmod 2775 {} \;
            - |
              find /var/www -type f -exec chmod 0664 {} \;
            - |
              chmod u+wrx /var/www/wordpress/wp-content/*
            - |
              echo 'ServerName 127.0.0.1:80' >> /etc/httpd/conf.d/MyBlog.conf
            - |
              echo 'DocumentRoot /var/www/wordpress' >> /etc/httpd/conf.d/MyBlog.conf
            - |
              echo '<Directory /var/www/wordpress>' >> /etc/httpd/conf.d/MyBlog.conf
            - |
              echo '  Options Indexes FollowSymLinks' >> /etc/httpd/conf.d/MyBlog.conf
            - |
              echo '  AllowOverride All' >> /etc/httpd/conf.d/MyBlog.conf
            - |
              echo '  Require all granted' >> /etc/httpd/conf.d/MyBlog.conf
            - |
              echo '</Directory>' >> /etc/httpd/conf.d/MyBlog.conf
            - |
              systemctl restart php-fpm
            - |
              systemctl restart httpd
            - |
              curl -o /var/www/wordpress/load.php https://cloudneta-book.s3.ap-northeast-2.amazonaws.com/chapter5/load.php --silent
            - |
              curl -o /var/www/wordpress/xff.php https://cloudneta-book.s3.ap-northeast-2.amazonaws.com/chapter5/XFF-all.php --silent

# AWS RDS
  myDBSubnetGroup:
    DependsOn: VPC1Subnet4
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: DBLab-Subnet34
      SubnetIds: 
        - !Ref VPC1Subnet3
        - !Ref VPC1Subnet4
      Tags: 
        - 
          Key: Name
          Value: WPLab-Subnet34

  myDBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties: 
      Description: my mysql 8
      Family: mysql8.0
      Parameters: 
        character_set_database: utf8
        character_set_server: utf8
      Tags: 
      - Key : Name
        Value : mymysql8